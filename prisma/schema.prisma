// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?
  isDeleted         Boolean   @default(false)
  name              String?
  age               Int?
  email             String    @unique
  pass              String
  isVerified        Boolean   @default(false)
  verificationToken String?
  verificationExpires DateTime?
  sellingProducts   Product[] @relation("SellerProducts")
  boughtProducts    Product[] @relation("BuyerProducts")
  cartItems         CartItem[]
}

model Product {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?  
  isDeleted   Boolean   @default(false)
  name        String
  description String?
  price       Float
  category    String?
  isSold      Boolean   @default(false)
  soldAt      DateTime?
  images      String[]  // Array of image URLs
  sellerId    String    // ID of the user who is selling the product
  seller      User      @relation("SellerProducts", fields: [sellerId], references: [id])
  buyerId     String?   // ID of the user who bought the product (null if not sold)
  buyer       User?     @relation("BuyerProducts", fields: [buyerId], references: [id])
  rating      Float?    // Average rating
  specifications Json?  // Flexible field for technical specifications
  isFeatured  Boolean   @default(false)
  discount    Float?    // Discount percentage
  tags        String[]  // Search tags
  cartItems         CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  userId    String
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}